{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww21600\viewh15080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 TODO\
\
finish runSingleModel for more neural network models - especially exogenous ones\
run ARIMA with exogenous variables\
calculate forecast error for each run\
\
run forecast on just arima and neural network alone\
run with bayesian combined prediction\
\
begin the process of extraction\
add 10 references to references section\
\
apply whole thing to brown building\
\
Figure out a potential loss function\
Probably going to be a different one for short term and long term\
Identify more long term applications\
\
\
\
\
WORK DIARY:\
\
03.15.2013\
Implement the framework for a general forecasting function\
Code bayesian combined forecasting\
Test neural networks with approach on simulated data\
\
\
03.16.2013\
reinstall all of matlab\
figure out what is wrong with ARIMA forecasting.\
runSIngleModel for aroma is finished.\
\
\
\
\
\

\b IDEAS:\

\b0 Look into 3m algorithm for dynamic model switching.  Use machine learning to learn optimal switches.  Perform semi-supervised learning to classify models.\
}
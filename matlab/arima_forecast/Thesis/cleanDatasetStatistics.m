%Visualize Clean Datasets
clear all;

dataSet = 3;
sensor = MyConstants.DATASET_SENSOR(dataSet);

dataLocation = MyConstants.FILE_LOCATIONS_CLEAN{dataSet};
saveLocationAggregate = strcat(MyConstants.THESIS_LOCATION, ...
                'images/datasets/aggregate_ds-', ...
                int2str(dataSet), '_clean', '.png');
saveLocationRaw = strcat(MyConstants.THESIS_LOCATION, ...
                'images/datasets/line_ds-', ...
                int2str(dataSet), '_clean', '.png');
fileLocation = strcat(MyConstants.THESIS_LOCATION, ...
                'images/datasets/aggregate_ds-', ...
                int2str(dataSet), '_clean', '.txt');          
                    
load(dataLocation);
fileID = fopen(fileLocation, 'w');

tmpTitle = {'Sensor Activations vs Time of Day for '};
plotTitle = strcat(tmpTitle, ...
                    MyConstants.DATA_SETS{dataSet}, ' dataset');

%Visualize raw data
%compute mean and stds
d = ones(size(data.times));
[means, stds] = dailyMean(data.data, d, data.blocksInDay, 'smooth', false);

means = means(7, :);
stds = stds(7, :);

fig = plotMean(means, 'std', stds, ...
    'xlabel', 'Hour of day', 'ylabel', 'Sensor activations', ...
    'figsizeX', MyConstants.IMAGE_XSIZE, ...
    'figsizeY', MyConstants.IMAGE_YSIZE, ...
    'plotTitle', plotTitle, ...
    'startTime', data.dayTimeStart, ...
    'endTime', data.dayTimeEnd, ...
    'blocksInDay', data.blocksInDay, ...
    'width', .02);

fprintf(1, 'raw avg std %f \n', mean(stds));

saveas(fig, saveLocationAggregate, 'png');

%Write a dataset file
fprintf(fileID, 'Total Days: %f\n', size(data.data, 2)/data.blocksInDay);
fprintf(fileID, 'Sensor: %i\n', sensor);
fprintf(fileID, 'Avg Std: %f\n', mean(stds));
fprintf(fileID, 'blocksInDay: %i\n\n', data.blocksInDay);

tmp = [means; stds];
fprintf(fileID, '%8s %8s\r\n', 'mean(t)', 'std(t)');
fprintf(fileID, '%8.3f  %8.3f\r\n', tmp);

st = 48*11;
ed = 48*13;
fig = plotMean(data.data(1, st:ed), ...
        'std', zeros(1, ed - st + 1), ...
        'width', 2.2, ...
        'meanColor', [0, 0, 0], ...
        'stdColor', [0, 0, 0], ...
        'xlabel', 'Hours', ...
        'ylabel', 'Scaled sensor activations', ...
        'lineGraph', true);
saveas(fig, saveLocationRaw, 'png');
